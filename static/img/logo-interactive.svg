<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 60" width="300" height="60">
  <defs>
    <!-- Filter for the glow effect -->
    <filter id="glow" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur stdDeviation="2" result="blur" />
      <feComposite in="SourceGraphic" in2="blur" operator="over" />
    </filter>
    
    <!-- Reflection filter for text only -->
    <filter id="textReflection" x="-50%" y="-50%" width="200%" height="200%">
      <feGaussianBlur in="SourceAlpha" stdDeviation="1" result="blur"/>
      <feOffset in="blur" dx="1" dy="1" result="offsetBlur"/>
      <feSpecularLighting in="blur" surfaceScale="5" specularConstant=".75" 
                        specularExponent="20" lighting-color="#white" 
                        result="specOut">
        <fePointLight id="light" x="150" y="30" z="60"/>
      </feSpecularLighting>
      <feComposite in="specOut" in2="SourceAlpha" operator="in" result="specOut"/>
      <feComposite in="SourceGraphic" in2="specOut" operator="arithmetic" 
                 k1="0" k2="1" k3="1" k4="0" result="litPaint"/>
    </filter>
  </defs>

  <!-- Background Rectangle -->          
  <rect width="300" height="60" rx="8" fill="#ffffff"/>

  <!-- Eye Symbol - NO reflection filter on the eye -->
  <g id="eye">
    <ellipse id="eyeOutline" cx="40" cy="30" rx="22" ry="15" fill="#ffffff" stroke="#007bff" stroke-width="3"/>
    <circle id="pupil" cx="40" cy="30" r="8" fill="#007bff"/>
    <circle id="reflectionDot" cx="43" cy="27" r="3" fill="#ffffff"/>
    
    <!-- Eyelids (initially hidden) -->
    <path id="topEyelid" d="M18,30 Q40,10 62,30" fill="#ffffff" stroke="#007bff" stroke-width="2" style="display:none;"/>
    <path id="bottomEyelid" d="M18,30 Q40,50 62,30" fill="#ffffff" stroke="#007bff" stroke-width="2" style="display:none;"/>
  </g>

  <!-- Text Group -->
  <g id="text-group" filter="url(#textReflection)">
    <!-- Text: Dr. Richa's Eye Care Centre (single line) -->
    <text x="70" y="33" font-family="Montserrat, sans-serif" font-size="20" font-weight="700" fill="#007bff">Dr. Richa's Eye Care Centre</text>

    <!-- Tagline 1: Vision that shines, Care that matters -->
    <text x="70" y="48" font-family="Montserrat, sans-serif" font-size="11" font-style="italic" fill="#333333">Vision that shines, Care that matters</text>

    <!-- Tagline 2: A hub for your family and kid's eyes (now italicized and pink) -->
    <text x="70" y="16" font-family="Montserrat, sans-serif" font-size="10" font-weight="500" font-style="italic" fill="#ff69b4">A hub for your family and kid's eyes</text>
  </g>
  
  <script type="text/javascript">
    <![CDATA[
    // Get references to SVG elements
    const svg = document.querySelector('svg');
    const eye = document.getElementById('eye');
    const pupil = document.getElementById('pupil');
    const reflectionDot = document.getElementById('reflectionDot');
    const topEyelid = document.getElementById('topEyelid');
    const bottomEyelid = document.getElementById('bottomEyelid');
    const light = document.getElementById('light');
    
    // Function to handle mouse movement for pupil tracking
    function trackMouse(evt) {
      // Calculate mouse position relative to the SVG
      const rect = svg.getBoundingClientRect();
      const mouseX = evt.clientX - rect.left;
      const mouseY = evt.clientY - rect.top;
      
      // Update light position for reflection effect (text only)
      light.setAttribute('x', mouseX);
      light.setAttribute('y', mouseY);
      
      // Move pupil slightly to follow mouse (limit movement)
      const eyeCenterX = 40;
      const eyeCenterY = 30;
      
      // Calculate direction vector from eye center to mouse
      let dx = mouseX - eyeCenterX;
      let dy = mouseY - eyeCenterY;
      
      // Limit movement to 3 units in any direction
      const maxMove = 3;
      const dist = Math.sqrt(dx*dx + dy*dy);
      if (dist > maxMove) {
        dx = dx * maxMove / dist;
        dy = dy * maxMove / dist;
      }
      
      // Apply movement to pupil
      pupil.setAttribute('cx', eyeCenterX + dx);
      
      // Move reflection dot opposite to pupil movement (simulating light reflection)
      reflectionDot.setAttribute('cx', 43 - dx/2);
      reflectionDot.setAttribute('cy', 27 - dy/2);
    }
    
    // Function to make the eye blink
    function blinkEye() {
      // Show eyelids
      topEyelid.style.display = 'block';
      bottomEyelid.style.display = 'block';
      
      // Hide pupil and reflection during blink
      pupil.style.display = 'none';
      reflectionDot.style.display = 'none';
      
      // Open eye after short delay
      setTimeout(() => {
        topEyelid.style.display = 'none';
        bottomEyelid.style.display = 'none';
        pupil.style.display = 'block';
        reflectionDot.style.display = 'block';
      }, 150);
    }
    
    // Attach event listeners when SVG is loaded
    if (svg.parentNode) {
      // Track mouse movement
      document.addEventListener('mousemove', trackMouse);
      
      // Blink when mouse enters the eye
      eye.addEventListener('mouseenter', blinkEye);
      
      // Random blinking
      setInterval(() => {
        if (Math.random() < 0.3) { // 30% chance to blink every 3 seconds
          blinkEye();
        }
      }, 3000);
    }
    ]]>
  </script>
</svg>
<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 250 60" width="250" height="60">
  <defs>
    <!-- Filter for the glow effect -->
    <filter id="glow" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur stdDeviation="2" result="blur" />
      <feComposite in="SourceGraphic" in2="blur" operator="over" />
    </filter>
  </defs>

  <!-- Background Rectangle -->          
  <rect width="250" height="60" rx="8" fill="#ffffff"/>

  <!-- Eye Symbol (smaller and without reflection effect) -->
  <g id="eye">
    <ellipse id="eyeOutline" cx="25" cy="30" rx="18" ry="12" fill="#ffffff" stroke="#007bff" stroke-width="3"/>
    <circle id="pupil" cx="25" cy="30" r="6" fill="#007bff"/>
    <circle id="reflectionDot" cx="27" cy="27" r="2" fill="#ffffff"/>
    
    <!-- Eyelids (initially hidden) -->
    <path id="topEyelid" d="M7,30 Q25,18 43,30" fill="#ffffff" stroke="#007bff" stroke-width="2" style="display:none;"/>
    <path id="bottomEyelid" d="M7,30 Q25,42 43,30" fill="#ffffff" stroke="#007bff" stroke-width="2" style="display:none;"/>
  </g>

  <!-- Text Group on one line -->
  <g id="text-group">
    <!-- Text: Dr. Richa's Eye Care Centre -->
    <text x="50" y="30" font-family="Montserrat, sans-serif" font-size="18" font-weight="700" fill="#007bff">Dr. Richa's Eye Care Centre</text>

    <!-- Vision Tagline (no italics) -->
    <text x="50" y="45" font-family="Montserrat, sans-serif" font-size="10" font-weight="500" fill="#333333">Vision that shines, Care that matters</text>

    <!-- Family Tagline (pink) -->
    <text x="50" y="57" font-family="Montserrat, sans-serif" font-size="10" font-weight="500" fill="#e83e8c">A hub for your family and kid's eyes</text>
  </g>
  
  <script type="text/javascript">
    <![CDATA[
    // Get references to SVG elements
    const svg = document.querySelector('svg');
    const eye = document.getElementById('eye');
    const pupil = document.getElementById('pupil');
    const reflectionDot = document.getElementById('reflectionDot');
    const topEyelid = document.getElementById('topEyelid');
    const bottomEyelid = document.getElementById('bottomEyelid');
    
    // Function to handle mouse movement for pupil tracking
    function trackMouse(evt) {
      // Calculate mouse position relative to the SVG
      const rect = svg.getBoundingClientRect();
      const mouseX = evt.clientX - rect.left;
      const mouseY = evt.clientY - rect.top;
      
      // Move pupil slightly to follow mouse (limit movement)
      const eyeCenterX = 25;
      const eyeCenterY = 30;
      
      // Calculate direction vector from eye center to mouse
      let dx = mouseX - eyeCenterX;
      let dy = mouseY - eyeCenterY;
      
      // Limit movement to 2 units in any direction
      const maxMove = 2;
      const dist = Math.sqrt(dx*dx + dy*dy);
      if (dist > maxMove) {
        dx = dx * maxMove / dist;
        dy = dy * maxMove / dist;
      }
      
      // Apply movement to pupil
      pupil.setAttribute('cx', eyeCenterX + dx);
      
      // Move reflection dot opposite to pupil movement (simulating light reflection)
      reflectionDot.setAttribute('cx', 27 - dx/2);
      reflectionDot.setAttribute('cy', 27 - dy/2);
    }
    
    // Function to make the eye blink
    function blinkEye() {
      // Show eyelids
      topEyelid.style.display = 'block';
      bottomEyelid.style.display = 'block';
      
      // Hide pupil and reflection during blink
      pupil.style.display = 'none';
      reflectionDot.style.display = 'none';
      
      // Open eye after short delay
      setTimeout(() => {
        topEyelid.style.display = 'none';
        bottomEyelid.style.display = 'none';
        pupil.style.display = 'block';
        reflectionDot.style.display = 'block';
      }, 150);
    }
    
    // Attach event listeners when SVG is loaded
    if (svg.parentNode) {
      // Track mouse movement
      document.addEventListener('mousemove', trackMouse);
      
      // Blink when mouse enters the eye
      eye.addEventListener('mouseenter', blinkEye);
      
      // Random blinking
      setInterval(() => {
        if (Math.random() < 0.3) { // 30% chance to blink every 3 seconds
          blinkEye();
        }
      }, 3000);
    }
    ]]>
  </script>
</svg>